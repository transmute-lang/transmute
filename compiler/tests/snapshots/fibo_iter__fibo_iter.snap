---
source: compiler/tests/fibo_iter.rs
expression: "format!(\"success:{}\\nstdout:\\n{}\\n\\nstderr:\\n{}\", output.status.success(),\n    String :: from_utf8(output.stdout).unwrap(), String ::\n    from_utf8(output.stderr).unwrap())"
---
success:true
stdout:
Initialize GC with log level: 2
Allocate test GC memory pool (4130 bytes): mmap returned 0x10000 (Success)
main(0) = 0
main(1) = 1
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
main(2) = 1
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
main(3) = 2
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
main(4) = 3
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
main(5) = 5
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
main(6) = 8
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
main(7) = 13
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
main(8) = 21
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
Start GC
main(9) = 34

Statistics:

  Executions ...... 168
  Allocated .......   0 blocks
    Total
      objects         0 bytes
      blocks          0 bytes
    Max
      objects         0 bytes
      blocks          0 bytes
    End
      objects         0 bytes
      blocks          0 bytes
  Freed ...........   0 blocks
    Total
      objects         0 bytes
      blocks          0 bytes



stderr:
