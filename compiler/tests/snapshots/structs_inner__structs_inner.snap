---
source: compiler/tests/structs_inner.rs
expression: "format!\n(\"success:{}\\nstdout:\\n{}\\n\\nstderr:\\n{}\", output.status.success(), String ::\nfrom_utf8(output.stdout).unwrap(), String ::\nfrom_utf8(output.stderr).unwrap())"
---
success:true
stdout:
[1] gc_init                | Initialize GC with log level: 2
[2] gc_init                | Allocate test GC memory pool (16416 bytes): mmap returned 0x10000 (Success)
[2] gc_malloc              | alloc 16 bytes, align 8
[2] gc_run                 | Start GC [1]
[2] gc_run                 | no allocated blocks
[1] gc_malloc              | allocated block of size 64 at 0x10010, returning object of size 16 at 0x10040(+48)
[2] gc_malloc              | alloc 16 bytes, align 8
[2] gc_run                 | Start GC [2]
[2] gc_run                 | Phase: init.
[2] gc_run                 |   block at 0x10010 (object at 0x10040: ''): unreachable
[2] gc_run                 | Phase: mark
[2] gc_run                 |   frame 0 (2 roots):
[2] gc_run                 |     root 0: skipped (null)
[2] gc_run                 |     root 1:
[2] gc_mark                |       mark unreachable block 0x10010 (object at 0x10040: '')
[2] gc_mark                |         0x10010: skip recursive mark(object at 0x10040): no mark callback
[2] gc_run                 | Phase: sweep (0)
[1] gc_run                 |   keeping block 0x10010 (object at 0x10040, size: 16: ''): reachable
[1] gc_malloc              | allocated block of size 64 at 0x10050, returning object of size 16 at 0x10080(+48)
main(0) = 42
[2] gc_malloc              | alloc 16 bytes, align 8
[2] gc_run                 | Start GC [3]
[2] gc_run                 | Phase: init.
[2] gc_run                 |   block at 0x10050 (object at 0x10080: ''): unreachable
[2] gc_run                 |   block at 0x10010 (object at 0x10040: ''): unreachable
[2] gc_run                 | Phase: mark
[2] gc_run                 |   frame 0 (2 roots):
[2] gc_run                 |     root 0: skipped (null)
[2] gc_run                 |     root 1: skipped (null)
[2] gc_run                 | Phase: sweep (0)
[1] gc_run                 |   freeing block at 0x10050 (object at 0x10080, size: 16: '')
[1] gc_run                 |   freeing block at 0x10010 (object at 0x10040, size: 16: '')
[2] gc_run                 | Phase: sweep (1)
[1] gc_malloc              | allocated block of size 64 at 0x10090, returning object of size 16 at 0x100c0(+48)
[2] gc_malloc              | alloc 16 bytes, align 8
[2] gc_run                 | Start GC [4]
[2] gc_run                 | Phase: init.
[2] gc_run                 |   block at 0x10090 (object at 0x100c0: ''): unreachable
[2] gc_run                 | Phase: mark
[2] gc_run                 |   frame 0 (2 roots):
[2] gc_run                 |     root 0: skipped (null)
[2] gc_run                 |     root 1:
[2] gc_mark                |       mark unreachable block 0x10090 (object at 0x100c0: '')
[2] gc_mark                |         0x10090: skip recursive mark(object at 0x100c0): no mark callback
[2] gc_run                 | Phase: sweep (0)
[1] gc_run                 |   keeping block 0x10090 (object at 0x100c0, size: 16: ''): reachable
[1] gc_malloc              | allocated block of size 64 at 0x100d0, returning object of size 16 at 0x10100(+48)
main(1) = 56
[2] gc_malloc              | alloc 16 bytes, align 8
[2] gc_run                 | Start GC [5]
[2] gc_run                 | Phase: init.
[2] gc_run                 |   block at 0x100d0 (object at 0x10100: ''): unreachable
[2] gc_run                 |   block at 0x10090 (object at 0x100c0: ''): unreachable
[2] gc_run                 | Phase: mark
[2] gc_run                 |   frame 0 (2 roots):
[2] gc_run                 |     root 0: skipped (null)
[2] gc_run                 |     root 1: skipped (null)
[2] gc_run                 | Phase: sweep (0)
[1] gc_run                 |   freeing block at 0x100d0 (object at 0x10100, size: 16: '')
[1] gc_run                 |   freeing block at 0x10090 (object at 0x100c0, size: 16: '')
[2] gc_run                 | Phase: sweep (1)
[1] gc_malloc              | allocated block of size 64 at 0x10110, returning object of size 16 at 0x10140(+48)
[2] gc_malloc              | alloc 16 bytes, align 8
[2] gc_run                 | Start GC [6]
[2] gc_run                 | Phase: init.
[2] gc_run                 |   block at 0x10110 (object at 0x10140: ''): unreachable
[2] gc_run                 | Phase: mark
[2] gc_run                 |   frame 0 (2 roots):
[2] gc_run                 |     root 0: skipped (null)
[2] gc_run                 |     root 1:
[2] gc_mark                |       mark unreachable block 0x10110 (object at 0x10140: '')
[2] gc_mark                |         0x10110: skip recursive mark(object at 0x10140): no mark callback
[2] gc_run                 | Phase: sweep (0)
[1] gc_run                 |   keeping block 0x10110 (object at 0x10140, size: 16: ''): reachable
[1] gc_malloc              | allocated block of size 64 at 0x10150, returning object of size 16 at 0x10180(+48)
main(2) = 72
[2] gc_malloc              | alloc 16 bytes, align 8
[2] gc_run                 | Start GC [7]
[2] gc_run                 | Phase: init.
[2] gc_run                 |   block at 0x10150 (object at 0x10180: ''): unreachable
[2] gc_run                 |   block at 0x10110 (object at 0x10140: ''): unreachable
[2] gc_run                 | Phase: mark
[2] gc_run                 |   frame 0 (2 roots):
[2] gc_run                 |     root 0: skipped (null)
[2] gc_run                 |     root 1: skipped (null)
[2] gc_run                 | Phase: sweep (0)
[1] gc_run                 |   freeing block at 0x10150 (object at 0x10180, size: 16: '')
[1] gc_run                 |   freeing block at 0x10110 (object at 0x10140, size: 16: '')
[2] gc_run                 | Phase: sweep (1)
[1] gc_malloc              | allocated block of size 64 at 0x10190, returning object of size 16 at 0x101c0(+48)
[2] gc_malloc              | alloc 16 bytes, align 8
[2] gc_run                 | Start GC [8]
[2] gc_run                 | Phase: init.
[2] gc_run                 |   block at 0x10190 (object at 0x101c0: ''): unreachable
[2] gc_run                 | Phase: mark
[2] gc_run                 |   frame 0 (2 roots):
[2] gc_run                 |     root 0: skipped (null)
[2] gc_run                 |     root 1:
[2] gc_mark                |       mark unreachable block 0x10190 (object at 0x101c0: '')
[2] gc_mark                |         0x10190: skip recursive mark(object at 0x101c0): no mark callback
[2] gc_run                 | Phase: sweep (0)
[1] gc_run                 |   keeping block 0x10190 (object at 0x101c0, size: 16: ''): reachable
[1] gc_malloc              | allocated block of size 64 at 0x101d0, returning object of size 16 at 0x10200(+48)
main(3) = 90
[2] gc_malloc              | alloc 16 bytes, align 8
[2] gc_run                 | Start GC [9]
[2] gc_run                 | Phase: init.
[2] gc_run                 |   block at 0x101d0 (object at 0x10200: ''): unreachable
[2] gc_run                 |   block at 0x10190 (object at 0x101c0: ''): unreachable
[2] gc_run                 | Phase: mark
[2] gc_run                 |   frame 0 (2 roots):
[2] gc_run                 |     root 0: skipped (null)
[2] gc_run                 |     root 1: skipped (null)
[2] gc_run                 | Phase: sweep (0)
[1] gc_run                 |   freeing block at 0x101d0 (object at 0x10200, size: 16: '')
[1] gc_run                 |   freeing block at 0x10190 (object at 0x101c0, size: 16: '')
[2] gc_run                 | Phase: sweep (1)
[1] gc_malloc              | allocated block of size 64 at 0x10210, returning object of size 16 at 0x10240(+48)
[2] gc_malloc              | alloc 16 bytes, align 8
[2] gc_run                 | Start GC [10]
[2] gc_run                 | Phase: init.
[2] gc_run                 |   block at 0x10210 (object at 0x10240: ''): unreachable
[2] gc_run                 | Phase: mark
[2] gc_run                 |   frame 0 (2 roots):
[2] gc_run                 |     root 0: skipped (null)
[2] gc_run                 |     root 1:
[2] gc_mark                |       mark unreachable block 0x10210 (object at 0x10240: '')
[2] gc_mark                |         0x10210: skip recursive mark(object at 0x10240): no mark callback
[2] gc_run                 | Phase: sweep (0)
[1] gc_run                 |   keeping block 0x10210 (object at 0x10240, size: 16: ''): reachable
[1] gc_malloc              | allocated block of size 64 at 0x10250, returning object of size 16 at 0x10280(+48)
main(4) = 110
[2] gc_malloc              | alloc 16 bytes, align 8
[2] gc_run                 | Start GC [11]
[2] gc_run                 | Phase: init.
[2] gc_run                 |   block at 0x10250 (object at 0x10280: ''): unreachable
[2] gc_run                 |   block at 0x10210 (object at 0x10240: ''): unreachable
[2] gc_run                 | Phase: mark
[2] gc_run                 |   frame 0 (2 roots):
[2] gc_run                 |     root 0: skipped (null)
[2] gc_run                 |     root 1: skipped (null)
[2] gc_run                 | Phase: sweep (0)
[1] gc_run                 |   freeing block at 0x10250 (object at 0x10280, size: 16: '')
[1] gc_run                 |   freeing block at 0x10210 (object at 0x10240, size: 16: '')
[2] gc_run                 | Phase: sweep (1)
[1] gc_malloc              | allocated block of size 64 at 0x10290, returning object of size 16 at 0x102c0(+48)
[2] gc_malloc              | alloc 16 bytes, align 8
[2] gc_run                 | Start GC [12]
[2] gc_run                 | Phase: init.
[2] gc_run                 |   block at 0x10290 (object at 0x102c0: ''): unreachable
[2] gc_run                 | Phase: mark
[2] gc_run                 |   frame 0 (2 roots):
[2] gc_run                 |     root 0: skipped (null)
[2] gc_run                 |     root 1:
[2] gc_mark                |       mark unreachable block 0x10290 (object at 0x102c0: '')
[2] gc_mark                |         0x10290: skip recursive mark(object at 0x102c0): no mark callback
[2] gc_run                 | Phase: sweep (0)
[1] gc_run                 |   keeping block 0x10290 (object at 0x102c0, size: 16: ''): reachable
[1] gc_malloc              | allocated block of size 64 at 0x102d0, returning object of size 16 at 0x10300(+48)
main(5) = 132
[2] gc_malloc              | alloc 16 bytes, align 8
[2] gc_run                 | Start GC [13]
[2] gc_run                 | Phase: init.
[2] gc_run                 |   block at 0x102d0 (object at 0x10300: ''): unreachable
[2] gc_run                 |   block at 0x10290 (object at 0x102c0: ''): unreachable
[2] gc_run                 | Phase: mark
[2] gc_run                 |   frame 0 (2 roots):
[2] gc_run                 |     root 0: skipped (null)
[2] gc_run                 |     root 1: skipped (null)
[2] gc_run                 | Phase: sweep (0)
[1] gc_run                 |   freeing block at 0x102d0 (object at 0x10300, size: 16: '')
[1] gc_run                 |   freeing block at 0x10290 (object at 0x102c0, size: 16: '')
[2] gc_run                 | Phase: sweep (1)
[1] gc_malloc              | allocated block of size 64 at 0x10310, returning object of size 16 at 0x10340(+48)
[2] gc_malloc              | alloc 16 bytes, align 8
[2] gc_run                 | Start GC [14]
[2] gc_run                 | Phase: init.
[2] gc_run                 |   block at 0x10310 (object at 0x10340: ''): unreachable
[2] gc_run                 | Phase: mark
[2] gc_run                 |   frame 0 (2 roots):
[2] gc_run                 |     root 0: skipped (null)
[2] gc_run                 |     root 1:
[2] gc_mark                |       mark unreachable block 0x10310 (object at 0x10340: '')
[2] gc_mark                |         0x10310: skip recursive mark(object at 0x10340): no mark callback
[2] gc_run                 | Phase: sweep (0)
[1] gc_run                 |   keeping block 0x10310 (object at 0x10340, size: 16: ''): reachable
[1] gc_malloc              | allocated block of size 64 at 0x10350, returning object of size 16 at 0x10380(+48)
main(6) = 156
[2] gc_malloc              | alloc 16 bytes, align 8
[2] gc_run                 | Start GC [15]
[2] gc_run                 | Phase: init.
[2] gc_run                 |   block at 0x10350 (object at 0x10380: ''): unreachable
[2] gc_run                 |   block at 0x10310 (object at 0x10340: ''): unreachable
[2] gc_run                 | Phase: mark
[2] gc_run                 |   frame 0 (2 roots):
[2] gc_run                 |     root 0: skipped (null)
[2] gc_run                 |     root 1: skipped (null)
[2] gc_run                 | Phase: sweep (0)
[1] gc_run                 |   freeing block at 0x10350 (object at 0x10380, size: 16: '')
[1] gc_run                 |   freeing block at 0x10310 (object at 0x10340, size: 16: '')
[2] gc_run                 | Phase: sweep (1)
[1] gc_malloc              | allocated block of size 64 at 0x10390, returning object of size 16 at 0x103c0(+48)
[2] gc_malloc              | alloc 16 bytes, align 8
[2] gc_run                 | Start GC [16]
[2] gc_run                 | Phase: init.
[2] gc_run                 |   block at 0x10390 (object at 0x103c0: ''): unreachable
[2] gc_run                 | Phase: mark
[2] gc_run                 |   frame 0 (2 roots):
[2] gc_run                 |     root 0: skipped (null)
[2] gc_run                 |     root 1:
[2] gc_mark                |       mark unreachable block 0x10390 (object at 0x103c0: '')
[2] gc_mark                |         0x10390: skip recursive mark(object at 0x103c0): no mark callback
[2] gc_run                 | Phase: sweep (0)
[1] gc_run                 |   keeping block 0x10390 (object at 0x103c0, size: 16: ''): reachable
[1] gc_malloc              | allocated block of size 64 at 0x103d0, returning object of size 16 at 0x10400(+48)
main(7) = 182
[2] gc_malloc              | alloc 16 bytes, align 8
[2] gc_run                 | Start GC [17]
[2] gc_run                 | Phase: init.
[2] gc_run                 |   block at 0x103d0 (object at 0x10400: ''): unreachable
[2] gc_run                 |   block at 0x10390 (object at 0x103c0: ''): unreachable
[2] gc_run                 | Phase: mark
[2] gc_run                 |   frame 0 (2 roots):
[2] gc_run                 |     root 0: skipped (null)
[2] gc_run                 |     root 1: skipped (null)
[2] gc_run                 | Phase: sweep (0)
[1] gc_run                 |   freeing block at 0x103d0 (object at 0x10400, size: 16: '')
[1] gc_run                 |   freeing block at 0x10390 (object at 0x103c0, size: 16: '')
[2] gc_run                 | Phase: sweep (1)
[1] gc_malloc              | allocated block of size 64 at 0x10410, returning object of size 16 at 0x10440(+48)
[2] gc_malloc              | alloc 16 bytes, align 8
[2] gc_run                 | Start GC [18]
[2] gc_run                 | Phase: init.
[2] gc_run                 |   block at 0x10410 (object at 0x10440: ''): unreachable
[2] gc_run                 | Phase: mark
[2] gc_run                 |   frame 0 (2 roots):
[2] gc_run                 |     root 0: skipped (null)
[2] gc_run                 |     root 1:
[2] gc_mark                |       mark unreachable block 0x10410 (object at 0x10440: '')
[2] gc_mark                |         0x10410: skip recursive mark(object at 0x10440): no mark callback
[2] gc_run                 | Phase: sweep (0)
[1] gc_run                 |   keeping block 0x10410 (object at 0x10440, size: 16: ''): reachable
[1] gc_malloc              | allocated block of size 64 at 0x10450, returning object of size 16 at 0x10480(+48)
main(8) = 210
[2] gc_malloc              | alloc 16 bytes, align 8
[2] gc_run                 | Start GC [19]
[2] gc_run                 | Phase: init.
[2] gc_run                 |   block at 0x10450 (object at 0x10480: ''): unreachable
[2] gc_run                 |   block at 0x10410 (object at 0x10440: ''): unreachable
[2] gc_run                 | Phase: mark
[2] gc_run                 |   frame 0 (2 roots):
[2] gc_run                 |     root 0: skipped (null)
[2] gc_run                 |     root 1: skipped (null)
[2] gc_run                 | Phase: sweep (0)
[1] gc_run                 |   freeing block at 0x10450 (object at 0x10480, size: 16: '')
[1] gc_run                 |   freeing block at 0x10410 (object at 0x10440, size: 16: '')
[2] gc_run                 | Phase: sweep (1)
[1] gc_malloc              | allocated block of size 64 at 0x10490, returning object of size 16 at 0x104c0(+48)
[2] gc_malloc              | alloc 16 bytes, align 8
[2] gc_run                 | Start GC [20]
[2] gc_run                 | Phase: init.
[2] gc_run                 |   block at 0x10490 (object at 0x104c0: ''): unreachable
[2] gc_run                 | Phase: mark
[2] gc_run                 |   frame 0 (2 roots):
[2] gc_run                 |     root 0: skipped (null)
[2] gc_run                 |     root 1:
[2] gc_mark                |       mark unreachable block 0x10490 (object at 0x104c0: '')
[2] gc_mark                |         0x10490: skip recursive mark(object at 0x104c0): no mark callback
[2] gc_run                 | Phase: sweep (0)
[1] gc_run                 |   keeping block 0x10490 (object at 0x104c0, size: 16: ''): reachable
[1] gc_malloc              | allocated block of size 64 at 0x104d0, returning object of size 16 at 0x10500(+48)
main(9) = 240
[2] gc_teardown            | GC Teardown
[2] gc_run                 | Start GC [21]
[2] gc_run                 | Phase: init.
[2] gc_run                 |   block at 0x104d0 (object at 0x10500: ''): unreachable
[2] gc_run                 |   block at 0x10490 (object at 0x104c0: ''): unreachable
[2] gc_run                 | Phase: mark
[2] gc_run                 | Phase: sweep (0)
[1] gc_run                 |   freeing block at 0x104d0 (object at 0x10500, size: 16: '')
[1] gc_run                 |   freeing block at 0x10490 (object at 0x104c0, size: 16: '')
[2] gc_run                 | Phase: sweep (1)

Statistics:

  Executions ......  21
  Allocated .......  20 blocks
    Total
      objects       320 bytes
      blocks       1280 bytes
    Max
      objects        32 bytes
      blocks        128 bytes
    End
      objects         0 bytes
      blocks          0 bytes
  Freed ...........  20 blocks
    Total
      objects       320 bytes
      blocks       1280 bytes



stderr:
