---
source: compiler/tests/print.rs
expression: "format!(\"success:{}\\nstdout:\\n{}\\n\\nstderr:\\n{}\", output.status.success(),\n    String :: from_utf8(output.stdout).unwrap(), String ::\n    from_utf8(output.stderr).unwrap())"
---
success:true
stdout:
Initialize GC with log level: 2
Allocate test GC memory pool (16416 bytes): mmap returned 0x10000 (Success)
0
true
main(0) = 0
1
false
main(1) = 1
2
false
main(2) = 2
3
false
main(3) = 3
4
false
main(4) = 4
5
false
main(5) = 5
6
false
main(6) = 6
7
false
main(7) = 7
8
false
main(8) = 8
9
false
main(9) = 9

GC Teardown

Start GC
Phase: init.
Phase: mark
Phase: sweep

Statistics:

  Executions ......   1
  Allocated .......   0 blocks
    Total
      objects         0 bytes
      blocks          0 bytes
    Max
      objects         0 bytes
      blocks          0 bytes
    End
      objects         0 bytes
      blocks          0 bytes
  Freed ...........   0 blocks
    Total
      objects         0 bytes
      blocks          0 bytes



stderr:
