---
source: hir/src/output/html.rs
expression: "&html"
---
<!DOCTYPE html>
<html>
<head>
    <style>
        body {
            background-color: #222;
        }

        * {
            font-family: monospace;
            color: #a9b7c6;
            cursor: default;
        }

        .line {
            position: absolute;
            left:0;
        }

        ul {
            padding: 0;
        }

        li {
            list-style: none;
            padding-left: 2em;
        }

        span {
            display: inline-block;
        }

        .kw {
            font-weight: bold;
            color: #cc7832;
        }

        .implicit.kw {
            font-weight: normal;
        }

        .num {
            color: #6897bb;
        }

        .ident, .ident_ref {
            cursor: pointer;
        }

        .ident_ref {
            text-decoration: underline dotted;
        }

        .ident:hover, .ident_ref:hover {
            background-color: blue;
            color: white;
        }

        .to {
            background-color: green;
            color: white;
        }

        .same {
            background-color: orange;
            color: black;
        }
    </style>
    <script
            src="https://code.jquery.com/jquery-3.7.1.slim.min.js"
            integrity="sha256-kmHvs0B+OpCW5GVHUNjv9rOmY0IvSIRcf7zGUDTDQM8="
            crossorigin="anonymous"></script>
    <script>
        $(document).ready(function () {
            $("li").filter((_, e) => $(e).children("ul").length === 0).each((i, e) => {
                $(e).prepend("<span class=\"line\">" + (i + 1) + "</span>");
            });
            $("[data-ident-ref],[data-type-ref]")
                .on("mousemove", (e) => {
                    let self = $(e.currentTarget);

                    let ref_attr = "data-ident-ref";
                    if (e.ctrlKey) {
                        ref_attr = "data-type-ident-ref";
                    }

                    let ref = self.attr(ref_attr);

                    $(".to").removeClass("to");
                    $(".same").removeClass("same");
                    $("[" + ref_attr + "=" + ref + "]").addClass("same");
                    $("#" + ref).addClass("to");

                    e.stopImmediatePropagation();
                })
            .on("mouseout", (e) => {
                $(".to").removeClass("to");
                $(".same").removeClass("same");
            });
            $("[data-par-id]")
                .on("mouseover", (e) => {
                    let self = $(e.currentTarget);
                    $("[data-par-id=" + self.attr("data-par-id") + "]").addClass("same");
                })
                .on("mouseout", (e) => {
                    let self = $(e.currentTarget);
                    $("[data-par-id=" + self.attr("data-par-id") + "]").removeClass("same");
                });
        });
    </script>
</head>
<body>
<ul>
  <li>
    <span class="kw">let</span>
    <span id="ident__stmt14" class="ident">f</span>
    <span class="par" data-par-id="par_0">(</span>
    <span id="ident__stmt14_index0" class="ident">n</span>
    <span class="colon">: </span>
    <span class="ident_ref" title="" data-ident-ref="ident__native-type_number" data-type-ident-ref="">number</span>
    <span class="par" data-par-id="par_0">)</span>
    <span class="colon">: </span>
    <span class="ident_ref" title="" data-ident-ref="ident__native-type_number" data-type-ident-ref="">number</span>
    <span class="equal"> = </span>
    <span class="curly" data-par-id="par_1">{</span>
  </li>
  <li>
    <ul>
      <li>
        <span class="kw" title="no type">if</span>
        <span class="ident_ref" title="function" data-ident-ref="ident__native_eq_number_number_boolean" data-type-ident-ref="">eq</span>
        <span class="par" data-par-id="par_2">(</span>
        <span class="ident_ref" title="number" data-ident-ref="ident__stmt14_index0" data-type-ident-ref="">n</span>
        <span class="comma">, </span>
        <span class="num" title="number">0</span>
        <span class="par" data-par-id="par_2">)</span>
        <span class="curly" data-par-id="par_3">{</span>
      </li>
      <li>
        <ul>
          <li>
            <span class="kw" title="explicit">ret</span>
            <span class="num" title="number">0</span>
            <span class="semicolon">;</span>
          </li>
        </ul>
      </li>
      <li>
        <span class="curly" data-par-id="par_3">}</span>
      </li>
      <li>
        <span class="kw" title="no type">if</span>
        <span class="ident_ref" title="function" data-ident-ref="ident__native_eq_number_number_boolean" data-type-ident-ref="">eq</span>
        <span class="par" data-par-id="par_4">(</span>
        <span class="ident_ref" title="number" data-ident-ref="ident__stmt14_index0" data-type-ident-ref="">n</span>
        <span class="comma">, </span>
        <span class="num" title="number">1</span>
        <span class="par" data-par-id="par_4">)</span>
        <span class="curly" data-par-id="par_5">{</span>
      </li>
      <li>
        <ul>
          <li>
            <span class="kw" title="explicit">ret</span>
            <span class="num" title="number">1</span>
            <span class="semicolon">;</span>
          </li>
        </ul>
      </li>
      <li>
        <span class="curly" data-par-id="par_5">}</span>
      </li>
      <li>
        <span class="kw">let</span>
        <span id="ident__stmt4" class="ident">prev_prev</span>
        <span class="equal"> = </span>
        <span class="num" title="number">0</span>
        <span class="semicolon">;</span>
      </li>
      <li>
        <span class="kw">let</span>
        <span id="ident__stmt5" class="ident">prev</span>
        <span class="equal"> = </span>
        <span class="num" title="number">1</span>
        <span class="semicolon">;</span>
      </li>
      <li>
        <span class="kw">let</span>
        <span id="ident__stmt6" class="ident">current</span>
        <span class="equal"> = </span>
        <span class="num" title="number">0</span>
        <span class="semicolon">;</span>
      </li>
      <li>
        <span class="kw">let</span>
        <span id="ident__stmt7" class="ident">n</span>
        <span class="equal"> = </span>
        <span class="ident_ref" title="number" data-ident-ref="ident__stmt14_index0" data-type-ident-ref="">n</span>
        <span class="semicolon">;</span>
      </li>
      <li>
        <span class="kw" title="number">ret</span>
        <span class="ident_ref" title="function" data-ident-ref="ident__native_gt_number_number_boolean" data-type-ident-ref="">gt</span>
        <span class="par" data-par-id="par_6">(</span>
        <span class="ident_ref" title="number" data-ident-ref="ident__stmt7" data-type-ident-ref="">n</span>
        <span class="comma">, </span>
        <span class="num" title="number">1</span>
        <span class="par" data-par-id="par_6">)</span>
        <span class="curly" data-par-id="par_7">{</span>
      </li>
      <li>
        <ul>
          <li>
            <span class="ident_ref" title="number" data-ident-ref="ident__stmt6" data-type-ident-ref="">current</span>
            <span class="equal"> = </span>
            <span class="ident_ref" title="function" data-ident-ref="ident__native_add_number_number_number" data-type-ident-ref="">add</span>
            <span class="par" data-par-id="par_8">(</span>
            <span class="ident_ref" title="number" data-ident-ref="ident__stmt4" data-type-ident-ref="">prev_prev</span>
            <span class="comma">, </span>
            <span class="ident_ref" title="number" data-ident-ref="ident__stmt5" data-type-ident-ref="">prev</span>
            <span class="par" data-par-id="par_8">)</span>
            <span class="semicolon">;</span>
          </li>
          <li>
            <span class="ident_ref" title="number" data-ident-ref="ident__stmt4" data-type-ident-ref="">prev_prev</span>
            <span class="equal"> = </span>
            <span class="ident_ref" title="number" data-ident-ref="ident__stmt5" data-type-ident-ref="">prev</span>
            <span class="semicolon">;</span>
          </li>
          <li>
            <span class="ident_ref" title="number" data-ident-ref="ident__stmt5" data-type-ident-ref="">prev</span>
            <span class="equal"> = </span>
            <span class="ident_ref" title="number" data-ident-ref="ident__stmt6" data-type-ident-ref="">current</span>
            <span class="semicolon">;</span>
          </li>
          <li>
            <span class="ident_ref" title="number" data-ident-ref="ident__stmt7" data-type-ident-ref="">n</span>
            <span class="equal"> = </span>
            <span class="ident_ref" title="function" data-ident-ref="ident__native_sub_number_number_number" data-type-ident-ref="">sub</span>
            <span class="par" data-par-id="par_9">(</span>
            <span class="ident_ref" title="number" data-ident-ref="ident__stmt7" data-type-ident-ref="">n</span>
            <span class="comma">, </span>
            <span class="num" title="number">1</span>
            <span class="par" data-par-id="par_9">)</span>
            <span class="semicolon">;</span>
          </li>
        </ul>
      </li>
      <li>
        <span class="curly" data-par-id="par_7">}</span>
      </li>
      <li>
        <span class="kw implicit" title="implicit">ret</span>
        <span class="ident_ref" title="number" data-ident-ref="ident__stmt6" data-type-ident-ref="">current</span>
        <span class="semicolon">;</span>
      </li>
    </ul>
  </li>
  <li>
    <span class="curly" data-par-id="par_1">}</span>
  </li>
</ul>
</body>
</html>

