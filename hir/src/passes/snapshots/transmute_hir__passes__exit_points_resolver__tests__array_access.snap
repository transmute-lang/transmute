---
source: hir/src/passes/exit_points_resolver.rs
expression: "(ast, block_exit_points)"
---
(
    Ast {
        identifiers: [
            IdentId(0) => "f",
            IdentId(1) => "a",
        ],
        identifier_refs: [
            IdentRefId(0) => IdentifierRef {
                id: IdentRefId(0),
                ident: Identifier {
                    id: IdentId(1),
                    span: 3:25; [47, 48],
                },
            },
        ],
        expressions: [
            ExprId(0) => Expression {
                id: ExprId(0),
                kind: Literal(
                    Literal {
                        kind: IdentRefId(0),
                        span: 3:25; [47, 48],
                    },
                ),
                span: 3:25; [47, 48],
            },
            ExprId(1) => Expression {
                id: ExprId(1),
                kind: Literal(
                    Literal {
                        kind: Boolean(true),
                        span: 3:30; [52, 56],
                    },
                ),
                span: 3:30; [52, 56],
            },
            ExprId(2) => Expression {
                id: ExprId(2),
                kind: Literal(
                    Literal {
                        kind: Number(0),
                        span: 3:41; [63, 64],
                    },
                ),
                span: 3:41; [63, 64],
            },
            ExprId(3) => Expression {
                id: ExprId(3),
                kind: Block(
                    [
                        StmtId(0),
                    ],
                ),
                span: 3:35; [57, 67],
            },
            ExprId(4) => Expression {
                id: ExprId(4),
                kind: Literal(
                    Literal {
                        kind: Number(1),
                        span: 3:57; [79, 80],
                    },
                ),
                span: 3:57; [79, 80],
            },
            ExprId(5) => Expression {
                id: ExprId(5),
                kind: Block(
                    [
                        StmtId(1),
                    ],
                ),
                span: 3:51; [73, 83],
            },
            ExprId(6) => Expression {
                id: ExprId(6),
                kind: If(
                    ExprId(1),
                    ExprId(3),
                    Some(
                        ExprId(5),
                    ),
                ),
                span: 3:27; [49, 83],
            },
            ExprId(7) => Expression {
                id: ExprId(7),
                kind: ArrayAccess(
                    ExprId(0),
                    ExprId(6),
                ),
                span: 3:26; [48, 84],
            },
            ExprId(8) => Expression {
                id: ExprId(8),
                kind: Literal(
                    Literal {
                        kind: Number(2),
                        span: 4:21; [106, 107],
                    },
                ),
                span: 4:21; [106, 107],
            },
            ExprId(9) => Expression {
                id: ExprId(9),
                kind: Block(
                    [
                        StmtId(2),
                        StmtId(3),
                    ],
                ),
                span: 2:21; [21, 122],
            },
        ],
        statements: [
            StmtId(0) => Statement {
                id: StmtId(0),
                kind: Ret(
                    Some(
                        ExprId(2),
                    ),
                    Explicit,
                ),
                span: 3:37; [59, 65],
            },
            StmtId(1) => Statement {
                id: StmtId(1),
                kind: Ret(
                    Some(
                        ExprId(4),
                    ),
                    Explicit,
                ),
                span: 3:53; [75, 81],
            },
            StmtId(2) => Statement {
                id: StmtId(2),
                kind: Let(
                    Identifier {
                        id: IdentId(1),
                        span: 3:21; [43, 44],
                    },
                    ExprId(7),
                ),
                span: 3:17; [39, 85],
            },
            StmtId(3) => Statement {
                id: StmtId(3),
                kind: Ret(
                    Some(
                        ExprId(8),
                    ),
                    Explicit,
                ),
                span: 4:17; [102, 108],
            },
            StmtId(4) => Statement {
                id: StmtId(4),
                kind: LetFn(
                    Identifier {
                        id: IdentId(0),
                        span: 2:17; [17, 18],
                    },
                    [],
                    [],
                    Return {
                        type_def_id: None,
                    },
                    ExprId(9),
                ),
                span: 2:13; [13, 122],
            },
        ],
        type_defs: [],
        roots: [
            StmtId(4),
        ],
    },
    [
        (
            ExprId(3),
            Output {
                exit_points: [
                    Explicit(
                        Some(
                            ExprId(2),
                        ),
                    ),
                ],
                unreachable: [],
            },
        ),
        (
            ExprId(5),
            Output {
                exit_points: [
                    Explicit(
                        Some(
                            ExprId(4),
                        ),
                    ),
                ],
                unreachable: [],
            },
        ),
        (
            ExprId(9),
            Output {
                exit_points: [
                    Explicit(
                        Some(
                            ExprId(2),
                        ),
                    ),
                    Explicit(
                        Some(
                            ExprId(4),
                        ),
                    ),
                ],
                unreachable: [
                    ExprId(8),
                ],
            },
        ),
    ],
)
