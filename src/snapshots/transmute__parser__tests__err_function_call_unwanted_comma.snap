---
source: src/parser.rs
expression: "Parser::new(Lexer::new(\"f(42,,43);\")).parse()"
---
(
    Ast {
        identifiers: [
            "f",
        ],
        identifier_refs: [
            IdentifierRef {
                id: IdentRefId {
                    id: 0,
                },
                ident: Identifier {
                    id: IdentId {
                        id: 0,
                    },
                    span: 1:1; [0, 1],
                },
                symbol_id: None,
            },
        ],
        expressions: [
            Expression {
                id: ExprId {
                    id: 0,
                },
                kind: Literal(
                    Literal {
                        kind: Number(
                            42,
                        ),
                        span: 1:3; [2, 4],
                    },
                ),
                span: 1:3; [2, 4],
            },
            Expression {
                id: ExprId {
                    id: 1,
                },
                kind: Literal(
                    Literal {
                        kind: Number(
                            43,
                        ),
                        span: 1:7; [6, 8],
                    },
                ),
                span: 1:7; [6, 8],
            },
            Expression {
                id: ExprId {
                    id: 2,
                },
                kind: FunctionCall(
                    IdentRefId {
                        id: 0,
                    },
                    [
                        ExprId {
                            id: 0,
                        },
                        ExprId {
                            id: 1,
                        },
                    ],
                ),
                span: 1:1; [0, 9],
            },
        ],
        statements: [
            Statement {
                id: StmtId {
                    id: 0,
                },
                kind: Expression(
                    ExprId {
                        id: 2,
                    },
                ),
                span: 1:1; [0, 10],
            },
        ],
        root: [
            StmtId {
                id: 0,
            },
        ],
    },
    Diagnostics {
        diagnostics: [
            Diagnostic {
                message: "Unexpected `,`, expected one of identifier, number, `true`, `false`, `if`, `while`, `)`, `(`, `*`, `/`, `-`, `+`, `==`, `!=`, `>`, `>=`, `<`, `<=`",
                span: 1:6; [5, 6],
                level: Error,
                generated_at: (
                    "src/parser.rs",
                    887,
                ),
            },
        ],
    },
)
