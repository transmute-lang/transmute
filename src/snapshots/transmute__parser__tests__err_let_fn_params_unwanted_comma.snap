---
source: src/parser.rs
expression: "Parser::new(Lexer::new(\"let x(,n:i,,m:j,) = { }\")).parse()"
---
(
    Ast {
        identifiers: [
            "x",
            "n",
            "i",
            "m",
            "j",
        ],
        identifier_refs: [],
        expressions: [
            Expression {
                id: ExprId {
                    id: 0,
                },
                kind: Block(
                    [],
                ),
                span: 1:21; [20, 23],
            },
        ],
        statements: [
            Statement {
                id: StmtId {
                    id: 0,
                },
                kind: LetFn(
                    Identifier {
                        id: IdentId {
                            id: 0,
                        },
                        span: 1:5; [4, 5],
                    },
                    [
                        Parameter {
                            identifier: Identifier {
                                id: IdentId {
                                    id: 1,
                                },
                                span: 1:8; [7, 8],
                            },
                            ty: Identifier {
                                id: IdentId {
                                    id: 2,
                                },
                                span: 1:10; [9, 10],
                            },
                            span: 1:8; [7, 10],
                        },
                        Parameter {
                            identifier: Identifier {
                                id: IdentId {
                                    id: 3,
                                },
                                span: 1:13; [12, 13],
                            },
                            ty: Identifier {
                                id: IdentId {
                                    id: 4,
                                },
                                span: 1:15; [14, 15],
                            },
                            span: 1:13; [12, 15],
                        },
                    ],
                    None,
                    ExprId {
                        id: 0,
                    },
                ),
                span: 1:1; [0, 23],
            },
        ],
        root: [
            StmtId {
                id: 0,
            },
        ],
    },
    Diagnostics {
        diagnostics: [
            Diagnostic {
                message: "Unexpected `,`, expected one of identifier, `)`",
                span: 1:7; [6, 7],
                level: Error,
                generated_at: (
                    "src/parser.rs",
                    341,
                ),
            },
            Diagnostic {
                message: "Unexpected `,`, expected one of identifier, `)`",
                span: 1:12; [11, 12],
                level: Error,
                generated_at: (
                    "src/parser.rs",
                    341,
                ),
            },
        ],
    },
)
