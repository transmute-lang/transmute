---
source: src/ast.rs
expression: "&ast1.merge(ast2)"
---
Ast {
    identifiers: [
        "c_1",
        "w_1",
        "c_2",
        "w_2",
    ],
    identifier_refs: [
        IdentifierRef {
            id: IdentRefId {
                id: 0,
            },
            ident: Identifier {
                id: IdentId {
                    id: 0,
                },
                span: 1:36; [35, 38],
            },
            bound_state: Unbound,
        },
        IdentifierRef {
            id: IdentRefId {
                id: 1,
            },
            ident: Identifier {
                id: IdentId {
                    id: 1,
                },
                span: 1:42; [41, 44],
            },
            bound_state: Unbound,
        },
        IdentifierRef {
            id: IdentRefId {
                id: 2,
            },
            ident: Identifier {
                id: IdentId {
                    id: 2,
                },
                span: 1:37; [36, 39],
            },
            bound_state: Unbound,
        },
        IdentifierRef {
            id: IdentRefId {
                id: 3,
            },
            ident: Identifier {
                id: IdentId {
                    id: 3,
                },
                span: 1:43; [42, 45],
            },
            bound_state: Unbound,
        },
    ],
    expressions: [
        Expression {
            id: ExprId {
                id: 0,
            },
            kind: Literal(
                Literal {
                    kind: Boolean(
                        true,
                    ),
                    span: 1:11; [10, 14],
                },
            ),
            span: 1:11; [10, 14],
            typed_state: Untyped,
        },
        Expression {
            id: ExprId {
                id: 1,
            },
            kind: Literal(
                Literal {
                    kind: Number(
                        1,
                    ),
                    span: 1:27; [26, 27],
                },
            ),
            span: 1:27; [26, 27],
            typed_state: Untyped,
        },
        Expression {
            id: ExprId {
                id: 2,
            },
            kind: Literal(
                Literal {
                    kind: Identifier(
                        IdentRefId {
                            id: 0,
                        },
                    ),
                    span: 1:36; [35, 38],
                },
            ),
            span: 1:36; [35, 38],
            typed_state: Untyped,
        },
        Expression {
            id: ExprId {
                id: 3,
            },
            kind: Literal(
                Literal {
                    kind: Identifier(
                        IdentRefId {
                            id: 1,
                        },
                    ),
                    span: 1:42; [41, 44],
                },
            ),
            span: 1:42; [41, 44],
            typed_state: Untyped,
        },
        Expression {
            id: ExprId {
                id: 4,
            },
            kind: Block(
                [
                    StmtId {
                        id: 2,
                    },
                ],
            ),
            span: 1:40; [39, 47],
            typed_state: Untyped,
        },
        Expression {
            id: ExprId {
                id: 5,
            },
            kind: While(
                ExprId {
                    id: 2,
                },
                ExprId {
                    id: 4,
                },
            ),
            span: 1:30; [29, 47],
            typed_state: Untyped,
        },
        Expression {
            id: ExprId {
                id: 6,
            },
            kind: Literal(
                Literal {
                    kind: Boolean(
                        false,
                    ),
                    span: 1:11; [10, 15],
                },
            ),
            span: 1:11; [10, 15],
            typed_state: Untyped,
        },
        Expression {
            id: ExprId {
                id: 7,
            },
            kind: Literal(
                Literal {
                    kind: Number(
                        2,
                    ),
                    span: 1:28; [27, 28],
                },
            ),
            span: 1:28; [27, 28],
            typed_state: Untyped,
        },
        Expression {
            id: ExprId {
                id: 8,
            },
            kind: Literal(
                Literal {
                    kind: Identifier(
                        IdentRefId {
                            id: 2,
                        },
                    ),
                    span: 1:37; [36, 39],
                },
            ),
            span: 1:37; [36, 39],
            typed_state: Untyped,
        },
        Expression {
            id: ExprId {
                id: 9,
            },
            kind: Literal(
                Literal {
                    kind: Identifier(
                        IdentRefId {
                            id: 3,
                        },
                    ),
                    span: 1:43; [42, 45],
                },
            ),
            span: 1:43; [42, 45],
            typed_state: Untyped,
        },
        Expression {
            id: ExprId {
                id: 10,
            },
            kind: Block(
                [
                    StmtId {
                        id: 6,
                    },
                ],
            ),
            span: 1:41; [40, 48],
            typed_state: Untyped,
        },
        Expression {
            id: ExprId {
                id: 11,
            },
            kind: While(
                ExprId {
                    id: 8,
                },
                ExprId {
                    id: 10,
                },
            ),
            span: 1:31; [30, 48],
            typed_state: Untyped,
        },
    ],
    statements: [
        Statement {
            id: StmtId {
                id: 0,
            },
            kind: Let(
                Identifier {
                    id: IdentId {
                        id: 0,
                    },
                    span: 1:5; [4, 7],
                },
                ExprId {
                    id: 0,
                },
            ),
            span: 1:1; [0, 15],
        },
        Statement {
            id: StmtId {
                id: 1,
            },
            kind: Let(
                Identifier {
                    id: IdentId {
                        id: 1,
                    },
                    span: 1:21; [20, 23],
                },
                ExprId {
                    id: 1,
                },
            ),
            span: 1:17; [16, 28],
        },
        Statement {
            id: StmtId {
                id: 2,
            },
            kind: Expression(
                ExprId {
                    id: 3,
                },
            ),
            span: 1:42; [41, 45],
        },
        Statement {
            id: StmtId {
                id: 3,
            },
            kind: Expression(
                ExprId {
                    id: 5,
                },
            ),
            span: 1:30; [29, 47],
        },
        Statement {
            id: StmtId {
                id: 4,
            },
            kind: Let(
                Identifier {
                    id: IdentId {
                        id: 2,
                    },
                    span: 1:5; [4, 7],
                },
                ExprId {
                    id: 6,
                },
            ),
            span: 1:1; [0, 16],
        },
        Statement {
            id: StmtId {
                id: 5,
            },
            kind: Let(
                Identifier {
                    id: IdentId {
                        id: 3,
                    },
                    span: 1:22; [21, 24],
                },
                ExprId {
                    id: 7,
                },
            ),
            span: 1:18; [17, 29],
        },
        Statement {
            id: StmtId {
                id: 6,
            },
            kind: Expression(
                ExprId {
                    id: 9,
                },
            ),
            span: 1:43; [42, 46],
        },
        Statement {
            id: StmtId {
                id: 7,
            },
            kind: Expression(
                ExprId {
                    id: 11,
                },
            ),
            span: 1:31; [30, 48],
        },
    ],
    root: [
        StmtId {
            id: 0,
        },
        StmtId {
            id: 1,
        },
        StmtId {
            id: 3,
        },
        StmtId {
            id: 4,
        },
        StmtId {
            id: 5,
        },
        StmtId {
            id: 7,
        },
    ],
    symbols: [],
    types: [],
    state: WithoutImplicitRet,
}
