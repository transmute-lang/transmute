---
source: src/parser.rs
expression: "Parser::new(Lexer::new(\"-a.b;\")).parse()"
---
Ok(
    Ast {
        identifiers: [
            "a",
            "b",
        ],
        identifier_refs: [
            IdentifierRef {
                id: IdentRefId {
                    id: 0,
                },
                ident: Identifier {
                    id: IdentId {
                        id: 0,
                    },
                    span: 1:2; [1, 2],
                },
                bound_state: Unbound,
            },
            IdentifierRef {
                id: IdentRefId {
                    id: 1,
                },
                ident: Identifier {
                    id: IdentId {
                        id: 1,
                    },
                    span: 1:4; [3, 4],
                },
                bound_state: Unbound,
            },
        ],
        expressions: [
            Expression {
                id: ExprId {
                    id: 0,
                },
                kind: Literal(
                    Literal {
                        kind: Identifier(
                            IdentRefId {
                                id: 0,
                            },
                        ),
                        span: 1:2; [1, 2],
                    },
                ),
                span: 1:2; [1, 2],
                typed_state: Untyped,
            },
            Expression {
                id: ExprId {
                    id: 1,
                },
                kind: Access(
                    ExprId {
                        id: 0,
                    },
                    IdentRefId {
                        id: 1,
                    },
                ),
                span: 1:2; [1, 4],
                typed_state: Untyped,
            },
            Expression {
                id: ExprId {
                    id: 2,
                },
                kind: Unary(
                    UnaryOperator {
                        kind: Minus,
                        span: 1:1; [0, 1],
                    },
                    ExprId {
                        id: 1,
                    },
                ),
                span: 1:1; [0, 4],
                typed_state: Untyped,
            },
        ],
        statements: [
            Statement {
                id: StmtId {
                    id: 0,
                },
                kind: Expression(
                    ExprId {
                        id: 2,
                    },
                ),
                span: 1:1; [0, 5],
            },
        ],
        root: [
            StmtId {
                id: 0,
            },
        ],
        symbols: [],
        types: [],
        state: ImplicitRet,
    },
)
