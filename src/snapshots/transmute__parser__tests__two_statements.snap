---
source: src/parser.rs
expression: "Parser::new(Lexer::new(\"let forty_two = 42; forty_two;\")).parse()"
---
Ok(
    Ast {
        identifiers: [
            "forty_two",
        ],
        identifier_refs: [
            IdentifierRef {
                id: IdentRefId {
                    id: 0,
                },
                ident: Identifier {
                    id: IdentId {
                        id: 0,
                    },
                    span: 1:21; [20, 29],
                },
                bound_state: Unbound,
            },
        ],
        expressions: [
            Expression {
                id: ExprId {
                    id: 0,
                },
                kind: Literal(
                    Literal {
                        kind: Number(
                            42,
                        ),
                        span: 1:17; [16, 18],
                    },
                ),
                span: 1:17; [16, 18],
                typed_state: Untyped,
            },
            Expression {
                id: ExprId {
                    id: 1,
                },
                kind: Literal(
                    Literal {
                        kind: Identifier(
                            IdentRefId {
                                id: 0,
                            },
                        ),
                        span: 1:21; [20, 29],
                    },
                ),
                span: 1:21; [20, 29],
                typed_state: Untyped,
            },
        ],
        statements: [
            Statement {
                id: StmtId {
                    id: 0,
                },
                kind: Let(
                    Identifier {
                        id: IdentId {
                            id: 0,
                        },
                        span: 1:5; [4, 13],
                    },
                    ExprId {
                        id: 0,
                    },
                ),
                span: 1:1; [0, 19],
            },
            Statement {
                id: StmtId {
                    id: 1,
                },
                kind: Expression(
                    ExprId {
                        id: 1,
                    },
                ),
                span: 1:21; [20, 30],
            },
        ],
        root: [
            StmtId {
                id: 0,
            },
            StmtId {
                id: 1,
            },
        ],
        symbols: [],
        types: [],
        implicit_ret: PhantomData<transmute::ast::WithImplicitRet>,
    },
)
