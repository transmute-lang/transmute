---
source: mir/src/lib.rs
expression: make_mir(hir)
---
Ok(
    Mir {
        functions: [
            Function {
                identifier: Identifier {
                    id: IdentId(5),
                    span: 4:21; [116, 117],
                },
                symbol_id: SymbolId(20),
                parameters: [],
                variables: {
                    SymbolId(23): Variable {
                        identifier: Identifier {
                            id: IdentId(6),
                            span: 5:25; [146, 147],
                        },
                        symbol_id: SymbolId(23),
                        type_id: TypeId(11),
                        expression: ExprId(2),
                        mutable: false,
                    },
                },
                body: ExprId(3),
                ret: TypeId(1),
            },
        ],
        structs: [
            Struct {
                identifier: Identifier {
                    id: IdentId(0),
                    span: 2:24; [24, 29],
                },
                symbol_id: SymbolId(18),
                fields: [
                    Field {
                        identifier: Identifier {
                            id: IdentId(1),
                            span: 2:32; [32, 37],
                        },
                        index: 0,
                        symbol_id: SymbolId(21),
                        type_id: TypeId(4),
                    },
                ],
            },
            Struct {
                identifier: Identifier {
                    id: IdentId(3),
                    span: 3:24; [72, 77],
                },
                symbol_id: SymbolId(19),
                fields: [
                    Field {
                        identifier: Identifier {
                            id: IdentId(4),
                            span: 3:32; [80, 85],
                        },
                        index: 0,
                        symbol_id: SymbolId(22),
                        type_id: TypeId(10),
                    },
                ],
            },
        ],
        identifiers: [
            "Inner",
            "field",
            "number",
            "Outer",
            "inner",
            "f",
            "s",
            "add",
            "boolean",
            "div",
            "eq",
            "ge",
            "gt",
            "le",
            "lt",
            "mul",
            "neg",
            "neq",
            "print",
            "sub",
            "void",
        ],
        expressions: [
            Expression {
                id: ExprId(0),
                kind: Literal(
                    Literal {
                        kind: Number(
                            1,
                        ),
                        span: 5:59; [180, 181],
                    },
                ),
                span: 5:59; [180, 181],
                type_id: TypeId(4),
            },
            Expression {
                id: ExprId(1),
                kind: StructInstantiation(
                    SymbolId(18),
                    StructId(0),
                    [
                        (
                            SymbolId(21),
                            ExprId(0),
                        ),
                    ],
                ),
                span: 5:44; [165, 183],
                type_id: TypeId(10),
            },
            Expression {
                id: ExprId(2),
                kind: StructInstantiation(
                    SymbolId(19),
                    StructId(1),
                    [
                        (
                            SymbolId(22),
                            ExprId(1),
                        ),
                    ],
                ),
                span: 5:29; [150, 185],
                type_id: TypeId(11),
            },
            Expression {
                id: ExprId(3),
                kind: Block(
                    [
                        StmtId(2),
                    ],
                ),
                span: 4:25; [120, 204],
                type_id: TypeId(1),
            },
            Expression {
                id: ExprId(4),
                kind: Assignment(
                    Direct(
                        SymbolId(23),
                    ),
                    ExprId(2),
                ),
                span: 5:29; [150, 185],
                type_id: TypeId(11),
            },
        ],
        statements: [
            Statement {
                id: StmtId(2),
                kind: Expression(
                    ExprId(4),
                ),
                span: 5:21; [142, 186],
            },
        ],
        symbols: [
            Symbol {
                id: SymbolId(1),
                kind: NativeType(
                    IdentId(20),
                    Void,
                ),
                type_id: TypeId(2),
                ident_id: IdentId(20),
            },
            Symbol {
                id: SymbolId(2),
                kind: NativeType(
                    IdentId(2),
                    Number,
                ),
                type_id: TypeId(2),
                ident_id: IdentId(2),
            },
            Symbol {
                id: SymbolId(3),
                kind: NativeType(
                    IdentId(8),
                    Boolean,
                ),
                type_id: TypeId(2),
                ident_id: IdentId(8),
            },
            Symbol {
                id: SymbolId(4),
                kind: Native(
                    IdentId(19),
                    [
                        TypeId(4),
                        TypeId(4),
                    ],
                    TypeId(4),
                    SubNumberNumber,
                ),
                type_id: TypeId(5),
                ident_id: IdentId(19),
            },
            Symbol {
                id: SymbolId(5),
                kind: Native(
                    IdentId(18),
                    [
                        TypeId(4),
                    ],
                    TypeId(1),
                    PrintNumber,
                ),
                type_id: TypeId(6),
                ident_id: IdentId(18),
            },
            Symbol {
                id: SymbolId(6),
                kind: Native(
                    IdentId(17),
                    [
                        TypeId(4),
                        TypeId(4),
                    ],
                    TypeId(3),
                    NeqNumberNumber,
                ),
                type_id: TypeId(7),
                ident_id: IdentId(17),
            },
            Symbol {
                id: SymbolId(7),
                kind: Native(
                    IdentId(17),
                    [
                        TypeId(3),
                        TypeId(3),
                    ],
                    TypeId(3),
                    NeqBooleanBoolean,
                ),
                type_id: TypeId(8),
                ident_id: IdentId(17),
            },
            Symbol {
                id: SymbolId(8),
                kind: Native(
                    IdentId(16),
                    [
                        TypeId(4),
                    ],
                    TypeId(4),
                    NegNumber,
                ),
                type_id: TypeId(9),
                ident_id: IdentId(16),
            },
            Symbol {
                id: SymbolId(9),
                kind: Native(
                    IdentId(15),
                    [
                        TypeId(4),
                        TypeId(4),
                    ],
                    TypeId(4),
                    MulNumberNumber,
                ),
                type_id: TypeId(5),
                ident_id: IdentId(15),
            },
            Symbol {
                id: SymbolId(10),
                kind: Native(
                    IdentId(14),
                    [
                        TypeId(4),
                        TypeId(4),
                    ],
                    TypeId(3),
                    LtNumberNumber,
                ),
                type_id: TypeId(7),
                ident_id: IdentId(14),
            },
            Symbol {
                id: SymbolId(11),
                kind: Native(
                    IdentId(13),
                    [
                        TypeId(4),
                        TypeId(4),
                    ],
                    TypeId(3),
                    LeNumberNumber,
                ),
                type_id: TypeId(7),
                ident_id: IdentId(13),
            },
            Symbol {
                id: SymbolId(12),
                kind: Native(
                    IdentId(12),
                    [
                        TypeId(4),
                        TypeId(4),
                    ],
                    TypeId(3),
                    GtNumberNumber,
                ),
                type_id: TypeId(7),
                ident_id: IdentId(12),
            },
            Symbol {
                id: SymbolId(13),
                kind: Native(
                    IdentId(11),
                    [
                        TypeId(4),
                        TypeId(4),
                    ],
                    TypeId(3),
                    GeNumberNumber,
                ),
                type_id: TypeId(7),
                ident_id: IdentId(11),
            },
            Symbol {
                id: SymbolId(14),
                kind: Native(
                    IdentId(10),
                    [
                        TypeId(4),
                        TypeId(4),
                    ],
                    TypeId(3),
                    EqNumberNumber,
                ),
                type_id: TypeId(7),
                ident_id: IdentId(10),
            },
            Symbol {
                id: SymbolId(15),
                kind: Native(
                    IdentId(10),
                    [
                        TypeId(3),
                        TypeId(3),
                    ],
                    TypeId(3),
                    EqBooleanBoolean,
                ),
                type_id: TypeId(8),
                ident_id: IdentId(10),
            },
            Symbol {
                id: SymbolId(16),
                kind: Native(
                    IdentId(9),
                    [
                        TypeId(4),
                        TypeId(4),
                    ],
                    TypeId(4),
                    DivNumberNumber,
                ),
                type_id: TypeId(5),
                ident_id: IdentId(9),
            },
            Symbol {
                id: SymbolId(17),
                kind: Native(
                    IdentId(7),
                    [
                        TypeId(4),
                        TypeId(4),
                    ],
                    TypeId(4),
                    AddNumberNumber,
                ),
                type_id: TypeId(5),
                ident_id: IdentId(7),
            },
            Symbol {
                id: SymbolId(18),
                kind: Struct(
                    StmtId(0),
                ),
                type_id: TypeId(10),
                ident_id: IdentId(0),
            },
            Symbol {
                id: SymbolId(19),
                kind: Struct(
                    StmtId(1),
                ),
                type_id: TypeId(11),
                ident_id: IdentId(3),
            },
            Symbol {
                id: SymbolId(20),
                kind: LetFn(
                    StmtId(3),
                    [],
                    TypeId(1),
                ),
                type_id: TypeId(12),
                ident_id: IdentId(5),
            },
            Symbol {
                id: SymbolId(21),
                kind: Field(
                    StmtId(0),
                    IdentId(1),
                    0,
                ),
                type_id: TypeId(4),
                ident_id: IdentId(1),
            },
            Symbol {
                id: SymbolId(22),
                kind: Field(
                    StmtId(1),
                    IdentId(4),
                    0,
                ),
                type_id: TypeId(10),
                ident_id: IdentId(4),
            },
            Symbol {
                id: SymbolId(23),
                kind: Let(
                    StmtId(2),
                ),
                type_id: TypeId(11),
                ident_id: IdentId(6),
            },
        ],
        types: [
            Void,
            None,
            Boolean,
            Number,
            Function(
                [
                    TypeId(4),
                    TypeId(4),
                ],
                TypeId(4),
            ),
            Function(
                [
                    TypeId(4),
                ],
                TypeId(1),
            ),
            Function(
                [
                    TypeId(4),
                    TypeId(4),
                ],
                TypeId(3),
            ),
            Function(
                [
                    TypeId(3),
                    TypeId(3),
                ],
                TypeId(3),
            ),
            Function(
                [
                    TypeId(4),
                ],
                TypeId(4),
            ),
            Struct(
                SymbolId(18),
                StructId(0),
            ),
            Struct(
                SymbolId(19),
                StructId(1),
            ),
            Function(
                [],
                TypeId(1),
            ),
        ],
    },
)
