---
source: ast/src/parser.rs
expression: "Parser::new(Lexer::new(\"let forty_two = 42; forty_two;\")).parse()"
---
Ok(
    Ast {
        identifiers: [
            IdentId(0) => "forty_two",
        ],
        identifier_refs: [
            IdentRefId(0) => IdentifierRef {
                id: IdentRefId(0),
                ident: Identifier {
                    id: IdentId(0),
                    span: 1:21; [20, 29],
                },
            },
        ],
        expressions: [
            ExprId(0) => Expression {
                id: ExprId(0),
                kind: Literal(
                    Literal {
                        kind: Number(42),
                        span: 1:17; [16, 18],
                    },
                ),
                span: 1:17; [16, 18],
            },
            ExprId(1) => Expression {
                id: ExprId(1),
                kind: Literal(
                    Literal {
                        kind: IdentRefId(0),
                        span: 1:21; [20, 29],
                    },
                ),
                span: 1:21; [20, 29],
            },
        ],
        statements: [
            StmtId(0) => Statement {
                id: StmtId(0),
                kind: Let(
                    Identifier {
                        id: IdentId(0),
                        span: 1:5; [4, 13],
                    },
                    ExprId(0),
                ),
                span: 1:1; [0, 19],
            },
            StmtId(1) => Statement {
                id: StmtId(1),
                kind: Expression(
                    ExprId(1),
                ),
                span: 1:21; [20, 30],
            },
        ],
        roots: [
            StmtId(0),
            StmtId(1),
        ],
    },
)
