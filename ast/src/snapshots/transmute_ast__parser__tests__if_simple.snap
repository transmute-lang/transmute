---
source: ast/src/parser.rs
expression: "Parser::new(Lexer::new(\"if true { 42; }\")).parse()"
---
Ok(
    Ast {
        identifiers: [],
        identifier_refs: [],
        expressions: [
            ExprId(0) => Expression {
                id: ExprId(0),
                kind: Literal(
                    Literal {
                        kind: Boolean(true),
                        span: 1:4; [3, 7],
                    },
                ),
                span: 1:4; [3, 7],
            },
            ExprId(1) => Expression {
                id: ExprId(1),
                kind: Literal(
                    Literal {
                        kind: Number(42),
                        span: 1:11; [10, 12],
                    },
                ),
                span: 1:11; [10, 12],
            },
            ExprId(2) => Expression {
                id: ExprId(2),
                kind: Block(
                    [
                        StmtId(0),
                    ],
                ),
                span: 1:9; [8, 15],
            },
            ExprId(3) => Expression {
                id: ExprId(3),
                kind: If(
                    ExprId(0),
                    ExprId(2),
                    None,
                ),
                span: 1:1; [0, 15],
            },
        ],
        statements: [
            StmtId(0) => Statement {
                id: StmtId(0),
                kind: Expression(
                    ExprId(1),
                ),
                span: 1:11; [10, 13],
            },
            StmtId(1) => Statement {
                id: StmtId(1),
                kind: Expression(
                    ExprId(3),
                ),
                span: 1:1; [0, 15],
            },
        ],
        type_defs: [],
        roots: [
            StmtId(1),
        ],
    },
)
