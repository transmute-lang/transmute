---
source: llvm/src/lib.rs
expression: llvm_ir
---
; ModuleID = 'main'
source_filename = "main"

%"Inner#id0" = type { i64 }
%"Outer#id1" = type { ptr }

declare void @print(i64)

declare ptr @malloc(i64)

define i64 @f() {
entry:
  %"outer#local#sym24#" = alloca ptr, align 8
  %"inner#local#sym23#" = alloca ptr, align 8
  %"heap#struct#Inner#id0#" = call ptr @malloc(i64 ptrtoint (ptr getelementptr (%"Inner#id0", ptr null, i32 1) to i64))
  %"heap#struct#Inner#id0#.field#idx0#sym21" = getelementptr inbounds %"Inner#id0", ptr %"heap#struct#Inner#id0#", i32 0, i32 0
  store i64 1, ptr %"heap#struct#Inner#id0#.field#idx0#sym21", align 4
  store ptr %"heap#struct#Inner#id0#", ptr %"inner#local#sym23#", align 8
  %"heap#struct#Outer#id1#" = call ptr @malloc(i64 ptrtoint (ptr getelementptr (%"Outer#id1", ptr null, i32 1) to i64))
  %"inner#local#sym23#1" = load ptr, ptr %"inner#local#sym23#", align 8
  %"heap#struct#Outer#id1#.inner#idx0#sym22" = getelementptr inbounds %"Outer#id1", ptr %"heap#struct#Outer#id1#", i32 0, i32 0
  store ptr %"inner#local#sym23#1", ptr %"heap#struct#Outer#id1#.inner#idx0#sym22", align 8
  store ptr %"heap#struct#Outer#id1#", ptr %"outer#local#sym24#", align 8
  %"outer#local#sym24#2" = load ptr, ptr %"outer#local#sym24#", align 8
  %"outer#local#sym24#2.inner#idx0#sym22#" = getelementptr inbounds %"Outer#id1", ptr %"outer#local#sym24#2", i32 0, i32 0
  %"outer#local#sym24#2.inner#idx0#sym22#3" = load ptr, ptr %"outer#local#sym24#2.inner#idx0#sym22#", align 8
  %"outer#local#sym24#2.inner#idx0#sym22#3.field#idx0#sym21#" = getelementptr inbounds %"Inner#id0", ptr %"outer#local#sym24#2.inner#idx0#sym22#3", i32 0, i32 0
  %"outer#local#sym24#2.inner#idx0#sym22#3.field#idx0#sym21#4" = load i64, ptr %"outer#local#sym24#2.inner#idx0#sym22#3.field#idx0#sym21#", align 4
  ret i64 %"outer#local#sym24#2.inner#idx0#sym22#3.field#idx0#sym21#4"
}
