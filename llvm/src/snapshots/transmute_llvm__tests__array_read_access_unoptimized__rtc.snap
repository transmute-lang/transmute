---
source: llvm/src/lib.rs
expression: llvm_ir
---
; ModuleID = 'main'
source_filename = "main"

@layout_a3n = global [3 x i64] [i64 1, i64 3, i64 0]

; Function Attrs: nounwind
declare void @llvm.gcroot(ptr, ptr) #0

declare ptr @gc_malloc(i64, i64)

declare void @gc_run()

declare void @tmc_check_array_index(i64, i64, i64, i64)

declare ptr @tmc_stdlib_string_new(ptr, i64)

declare void @_TM0_5print1s(ptr)

declare void @_TM0_5print1n(i64)

declare void @_TM0_5print1b(i1)

define private void @_glob() {
entry:
  unreachable
}

define void @_TM0_1f0() gc "shadow-stack" {
entry:
  %"b#local#sym23#" = alloca i64, align 8
  %"a#local#sym22#" = alloca ptr, align 8
  store ptr null, ptr %"a#local#sym22#", align 8
  call void @llvm.gcroot(ptr %"a#local#sym22#", ptr @layout_a3n)
  %"heap#array#" = call ptr @gc_malloc(i64 ptrtoint (ptr getelementptr ([3 x i64], ptr null, i32 1) to i64), i64 ptrtoint (ptr getelementptr ({ i1, [3 x i64] }, ptr null, i64 0, i32 1) to i64))
  %"heap#array#1" = load [3 x i64], ptr %"heap#array#", align 4
  %"heap#array#[0]#" = insertvalue [3 x i64] %"heap#array#1", i64 0, 0
  %"heap#array#[1]#" = insertvalue [3 x i64] %"heap#array#[0]#", i64 1, 1
  %"heap#array#[2]#" = insertvalue [3 x i64] %"heap#array#[1]#", i64 2, 2
  store [3 x i64] %"heap#array#[2]#", ptr %"heap#array#", align 4
  store ptr %"heap#array#", ptr %"a#local#sym22#", align 8
  call void @gc_run()
  %"a#local#sym22#2" = load ptr, ptr %"a#local#sym22#", align 8
  call void @tmc_check_array_index(i64 1, i64 3, i64 4, i64 23)
  %"array[?]#" = getelementptr [3 x i64], ptr %"a#local#sym22#2", i64 0, i64 1
  %"array[?]#3" = load i64, ptr %"array[?]#", align 4
  store i64 %"array[?]#3", ptr %"b#local#sym23#", align 4
  call void @gc_run()
  ret void
}

attributes #0 = { nounwind }
