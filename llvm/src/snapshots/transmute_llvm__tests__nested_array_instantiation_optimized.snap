---
source: llvm/src/lib.rs
expression: llvm_ir
---
; ModuleID = 'main'
source_filename = "main"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@"gc_callbacks#a2a2n" = global { ptr, ptr } { ptr @"gc_callback#mark#a2a2n", ptr null }

; Function Attrs: nounwind
declare void @llvm.gcroot(ptr, ptr) #0

declare ptr @gc_malloc(i64, i64, ptr)

declare void @gc_run()

declare void @gc_mark(ptr)

declare void @tmc_check_array_index(i64, i64, i64, i64)

declare ptr @tmc_stdlib_string_new(ptr, i64)

define private void @_glob() {
entry:
  unreachable
}

define void @"gc_callback#mark#a2a2n"(ptr %0) {
entry:
  br label %cond

cond:                                             ; preds = %body, %entry
  %"local#size1" = phi i64 [ %index, %body ], [ 2, %entry ]
  %ne0.not = icmp eq i64 %"local#size1", 0
  br i1 %ne0.not, label %end_while, label %body

body:                                             ; preds = %cond
  %index = add i64 %"local#size1", -1
  %"array[index]_ptr" = getelementptr [2 x ptr], ptr %0, i64 0, i64 %index
  %"array[index]" = load ptr, ptr %"array[index]_ptr", align 8
  call void @gc_mark(ptr %"array[index]")
  br label %cond

end_while:                                        ; preds = %cond
  ret void
}

define i64 @_TM0_1f0() gc "shadow-stack" {
entry:
  %"gcroot#heap#array#2" = alloca ptr, align 8
  store ptr null, ptr %"gcroot#heap#array#2", align 8
  call void @llvm.gcroot(ptr nonnull %"gcroot#heap#array#2", ptr null)
  %"gcroot#heap#array#" = alloca ptr, align 8
  store ptr null, ptr %"gcroot#heap#array#", align 8
  call void @llvm.gcroot(ptr nonnull %"gcroot#heap#array#", ptr null)
  %"a#local#sym20#" = alloca ptr, align 8
  store ptr null, ptr %"a#local#sym20#", align 8
  call void @llvm.gcroot(ptr nonnull %"a#local#sym20#", ptr null)
  %"heap#array#" = call ptr @gc_malloc(i64 16, i64 8, ptr null)
  store ptr %"heap#array#", ptr %"gcroot#heap#array#", align 8
  store i64 0, ptr %"heap#array#", align 4
  %"heap#array#.repack18" = getelementptr inbounds [2 x i64], ptr %"heap#array#", i64 0, i64 1
  store i64 1, ptr %"heap#array#.repack18", align 4
  %"heap#array#3" = call ptr @gc_malloc(i64 16, i64 8, ptr null)
  store ptr %"heap#array#3", ptr %"gcroot#heap#array#2", align 8
  store i64 3, ptr %"heap#array#3", align 4
  %"heap#array#3.repack22" = getelementptr inbounds [2 x i64], ptr %"heap#array#3", i64 0, i64 1
  store i64 4, ptr %"heap#array#3.repack22", align 4
  %"heap#array#7" = call ptr @gc_malloc(i64 16, i64 8, ptr nonnull @"gc_callbacks#a2a2n")
  store ptr %"heap#array#", ptr %"heap#array#7", align 8
  %"heap#array#7.repack26" = getelementptr inbounds [2 x ptr], ptr %"heap#array#7", i64 0, i64 1
  store ptr %"heap#array#3", ptr %"heap#array#7.repack26", align 8
  store ptr %"heap#array#7", ptr %"a#local#sym20#", align 8
  call void @gc_run()
  %"a#local#sym20#11" = load ptr, ptr %"a#local#sym20#", align 8
  call void @tmc_check_array_index(i64 0, i64 2, i64 4, i64 15)
  %"array[?]#12" = load ptr, ptr %"a#local#sym20#11", align 8
  call void @tmc_check_array_index(i64 0, i64 2, i64 4, i64 18)
  %"array[?]#14" = load i64, ptr %"array[?]#12", align 4
  ret i64 %"array[?]#14"
}

attributes #0 = { nounwind }
