---
source: llvm/src/lib.rs
expression: llvm_ir
---
; ModuleID = 'main'
source_filename = "main"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@layout_s1S = global [2 x i64] zeroinitializer
@layout_a1s1S = global [3 x i64] [i64 1, i64 1, i64 ptrtoint (ptr @layout_s1S to i64)]

; Function Attrs: nounwind
declare void @llvm.gcroot(ptr, ptr) #0

declare ptr @gc_malloc(i64)

declare void @gc_run()

declare void @tmc_check_array_index(i64, i64, i64, i64)

declare void @_TM0_5print1n(i64)

declare void @_TM0_5print1b(i1)

define private void @_glob() {
entry:
  unreachable
}

define i64 @_TM0_1f0() gc "shadow-stack" {
entry:
  %"gcroot#heap#struct#S#id0#" = alloca ptr, align 8
  store ptr null, ptr %"gcroot#heap#struct#S#id0#", align 8
  call void @llvm.gcroot(ptr nonnull %"gcroot#heap#struct#S#id0#", ptr nonnull @layout_s1S)
  %"a#local#sym22#" = alloca ptr, align 8
  store ptr null, ptr %"a#local#sym22#", align 8
  call void @llvm.gcroot(ptr nonnull %"a#local#sym22#", ptr nonnull @layout_a1s1S)
  %"heap#struct#S#id0#" = call ptr @gc_malloc(i64 8)
  store ptr %"heap#struct#S#id0#", ptr %"gcroot#heap#struct#S#id0#", align 8
  store i64 0, ptr %"heap#struct#S#id0#", align 4
  %"heap#array#" = call ptr @gc_malloc(i64 8)
  store ptr %"heap#struct#S#id0#", ptr %"heap#array#", align 8
  store ptr %"heap#array#", ptr %"a#local#sym22#", align 8
  call void @gc_run()
  %"a#local#sym22#2" = load ptr, ptr %"a#local#sym22#", align 8
  %tmp = load ptr, ptr %"a#local#sym22#2", align 8
  store i64 1, ptr %tmp, align 4
  call void @gc_run()
  ret i64 1
}

attributes #0 = { nounwind }
