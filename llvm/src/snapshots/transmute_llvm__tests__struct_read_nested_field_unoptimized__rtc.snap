---
source: llvm/src/lib.rs
expression: llvm_ir
---
; ModuleID = 'main'
source_filename = "main"

%"Inner#id0" = type { i64 }
%"Outer#id1" = type { ptr }

@layout_s5Inner = global [2 x i64] zeroinitializer
@layout_s5Outer = global [4 x i64] [i64 0, i64 1, i64 0, i64 ptrtoint (ptr @layout_s5Inner to i64)]

; Function Attrs: nounwind
declare void @llvm.gcroot(ptr, ptr) #0

declare ptr @gc_malloc(i64, i64)

declare void @gc_run()

declare void @tmc_check_array_index(i64, i64, i64, i64)

declare ptr @tmc_stdlib_string_new(ptr, i64)

define private void @_glob() {
entry:
  unreachable
}

define i64 @_TM0_1f0() gc "shadow-stack" {
entry:
  %"gcroot#heap#struct#Inner#id0#" = alloca ptr, align 8
  store ptr null, ptr %"gcroot#heap#struct#Inner#id0#", align 8
  call void @llvm.gcroot(ptr %"gcroot#heap#struct#Inner#id0#", ptr @layout_s5Inner)
  %"outer#local#sym23#" = alloca ptr, align 8
  store ptr null, ptr %"outer#local#sym23#", align 8
  call void @llvm.gcroot(ptr %"outer#local#sym23#", ptr @layout_s5Outer)
  %"heap#struct#Inner#id0#" = call ptr @gc_malloc(i64 ptrtoint (ptr getelementptr (%"Inner#id0", ptr null, i32 1) to i64), i64 ptrtoint (ptr getelementptr ({ i1, %"Inner#id0" }, ptr null, i64 0, i32 1) to i64))
  store ptr %"heap#struct#Inner#id0#", ptr %"gcroot#heap#struct#Inner#id0#", align 8
  %"heap#struct#Inner#id0#.field#idx0#sym21" = getelementptr inbounds %"Inner#id0", ptr %"heap#struct#Inner#id0#", i32 0, i32 0
  store i64 1, ptr %"heap#struct#Inner#id0#.field#idx0#sym21", align 4
  %"heap#struct#Outer#id1#" = call ptr @gc_malloc(i64 ptrtoint (ptr getelementptr (%"Outer#id1", ptr null, i32 1) to i64), i64 ptrtoint (ptr getelementptr ({ i1, %"Outer#id1" }, ptr null, i64 0, i32 1) to i64))
  %"heap#struct#Outer#id1#.inner#idx0#sym22" = getelementptr inbounds %"Outer#id1", ptr %"heap#struct#Outer#id1#", i32 0, i32 0
  store ptr %"heap#struct#Inner#id0#", ptr %"heap#struct#Outer#id1#.inner#idx0#sym22", align 8
  store ptr %"heap#struct#Outer#id1#", ptr %"outer#local#sym23#", align 8
  call void @gc_run()
  %"outer#local#sym23#1" = load ptr, ptr %"outer#local#sym23#", align 8
  %"outer#local#sym23#1.inner#idx0#sym22#" = getelementptr inbounds %"Outer#id1", ptr %"outer#local#sym23#1", i32 0, i32 0
  %"outer#local#sym23#1.inner#idx0#sym22#2" = load ptr, ptr %"outer#local#sym23#1.inner#idx0#sym22#", align 8
  %"outer#local#sym23#1.inner#idx0#sym22#2.field#idx0#sym21#" = getelementptr inbounds %"Inner#id0", ptr %"outer#local#sym23#1.inner#idx0#sym22#2", i32 0, i32 0
  %"outer#local#sym23#1.inner#idx0#sym22#2.field#idx0#sym21#3" = load i64, ptr %"outer#local#sym23#1.inner#idx0#sym22#2.field#idx0#sym21#", align 4
  ret i64 %"outer#local#sym23#1.inner#idx0#sym22#2.field#idx0#sym21#3"
}

attributes #0 = { nounwind }
