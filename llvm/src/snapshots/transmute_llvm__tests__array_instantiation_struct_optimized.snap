---
source: llvm/src/lib.rs
expression: llvm_ir
---
; ModuleID = 'main'
source_filename = "main"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@"gc_callbacks#a2s1S" = global { ptr, ptr } { ptr @"gc_callback#mark#a2s1S", ptr null }

; Function Attrs: nounwind
declare void @llvm.gcroot(ptr, ptr) #0

declare ptr @gc_malloc(i64, i64, ptr)

declare void @gc_run()

declare void @gc_mark(ptr)

declare void @tmc_check_array_index(i64, i64, i64, i64)

declare ptr @tmc_stdlib_string_new(ptr, i64)

define private void @_glob() {
entry:
  unreachable
}

define void @"gc_callback#mark#a2s1S"(ptr %0) {
entry:
  br label %cond

cond:                                             ; preds = %body, %entry
  %"local#size1" = phi i64 [ %index, %body ], [ 2, %entry ]
  %ne0.not = icmp eq i64 %"local#size1", 0
  br i1 %ne0.not, label %end_while, label %body

body:                                             ; preds = %cond
  %index = add i64 %"local#size1", -1
  %"array[index]_ptr" = getelementptr [2 x ptr], ptr %0, i64 0, i64 %index
  %"array[index]" = load ptr, ptr %"array[index]_ptr", align 8
  call void @gc_mark(ptr %"array[index]")
  br label %cond

end_while:                                        ; preds = %cond
  ret void
}

define void @_TM0_1f0() gc "shadow-stack" {
entry:
  %"gcroot#heap#struct#S#id0#1" = alloca ptr, align 8
  store ptr null, ptr %"gcroot#heap#struct#S#id0#1", align 8
  call void @llvm.gcroot(ptr nonnull %"gcroot#heap#struct#S#id0#1", ptr null)
  %"gcroot#heap#struct#S#id0#" = alloca ptr, align 8
  store ptr null, ptr %"gcroot#heap#struct#S#id0#", align 8
  call void @llvm.gcroot(ptr nonnull %"gcroot#heap#struct#S#id0#", ptr null)
  %"a#local#sym22#" = alloca ptr, align 8
  store ptr null, ptr %"a#local#sym22#", align 8
  call void @llvm.gcroot(ptr nonnull %"a#local#sym22#", ptr null)
  %"heap#struct#S#id0#" = call ptr @gc_malloc(i64 8, i64 8, ptr null)
  store ptr %"heap#struct#S#id0#", ptr %"gcroot#heap#struct#S#id0#", align 8
  store i64 0, ptr %"heap#struct#S#id0#", align 4
  %"heap#struct#S#id0#2" = call ptr @gc_malloc(i64 8, i64 8, ptr null)
  store ptr %"heap#struct#S#id0#2", ptr %"gcroot#heap#struct#S#id0#1", align 8
  store i64 1, ptr %"heap#struct#S#id0#2", align 4
  %"heap#array#" = call ptr @gc_malloc(i64 16, i64 8, ptr nonnull @"gc_callbacks#a2s1S")
  store ptr %"heap#struct#S#id0#", ptr %"heap#array#", align 8
  %"heap#array#.repack8" = getelementptr inbounds [2 x ptr], ptr %"heap#array#", i64 0, i64 1
  store ptr %"heap#struct#S#id0#2", ptr %"heap#array#.repack8", align 8
  store ptr %"heap#array#", ptr %"a#local#sym22#", align 8
  call void @gc_run()
  ret void
}

attributes #0 = { nounwind }
