---
source: llvm/src/lib.rs
expression: llvm_ir
---
; ModuleID = 'main'
source_filename = "main"

%"S#id0" = type { i64 }

@"gc_callbacks#a2s1S" = global { ptr, ptr } { ptr @"gc_callback#mark#a2s1S", ptr null }

; Function Attrs: nounwind
declare void @llvm.gcroot(ptr, ptr) #0

declare ptr @gc_malloc(i64, i64, ptr)

declare void @gc_run()

declare void @gc_mark(ptr)

declare void @tmc_check_array_index(i64, i64, i64, i64)

declare ptr @tmc_stdlib_string_new(ptr, i64)

declare void @_TM0_5print1s(ptr)

declare void @_TM0_5print1n(i64)

declare void @_TM0_5print1b(i1)

define private void @_glob() {
entry:
  unreachable
}

define void @"gc_callback#mark#a2s1S"(ptr %0) {
entry:
  %"local#size" = alloca i64, align 8
  store i64 2, ptr %"local#size", align 4
  br label %cond

cond:                                             ; preds = %body, %entry
  %"local#size1" = load i64, ptr %"local#size", align 4
  %ne0 = icmp ne i64 %"local#size1", 0
  br i1 %ne0, label %body, label %end_while

body:                                             ; preds = %cond
  %index = sub i64 %"local#size1", 1
  store i64 %index, ptr %"local#size", align 4
  %"array[index]_ptr" = getelementptr [2 x ptr], ptr %0, i64 0, i64 %index
  %"array[index]" = load ptr, ptr %"array[index]_ptr", align 8
  call void @gc_mark(ptr %"array[index]")
  br label %cond

end_while:                                        ; preds = %cond
  ret void
}

define void @_TM0_1f0() gc "shadow-stack" {
entry:
  %"gcroot#heap#struct#S#id0#1" = alloca ptr, align 8
  store ptr null, ptr %"gcroot#heap#struct#S#id0#1", align 8
  call void @llvm.gcroot(ptr %"gcroot#heap#struct#S#id0#1", ptr null)
  %"gcroot#heap#struct#S#id0#" = alloca ptr, align 8
  store ptr null, ptr %"gcroot#heap#struct#S#id0#", align 8
  call void @llvm.gcroot(ptr %"gcroot#heap#struct#S#id0#", ptr null)
  %"a#local#sym24#" = alloca ptr, align 8
  store ptr null, ptr %"a#local#sym24#", align 8
  call void @llvm.gcroot(ptr %"a#local#sym24#", ptr null)
  %"heap#struct#S#id0#" = call ptr @gc_malloc(i64 ptrtoint (ptr getelementptr (%"S#id0", ptr null, i32 1) to i64), i64 ptrtoint (ptr getelementptr ({ i1, %"S#id0" }, ptr null, i64 0, i32 1) to i64), ptr null)
  store ptr %"heap#struct#S#id0#", ptr %"gcroot#heap#struct#S#id0#", align 8
  %"heap#struct#S#id0#.field#idx0#sym23" = getelementptr inbounds %"S#id0", ptr %"heap#struct#S#id0#", i32 0, i32 0
  store i64 0, ptr %"heap#struct#S#id0#.field#idx0#sym23", align 4
  %"heap#struct#S#id0#2" = call ptr @gc_malloc(i64 ptrtoint (ptr getelementptr (%"S#id0", ptr null, i32 1) to i64), i64 ptrtoint (ptr getelementptr ({ i1, %"S#id0" }, ptr null, i64 0, i32 1) to i64), ptr null)
  store ptr %"heap#struct#S#id0#2", ptr %"gcroot#heap#struct#S#id0#1", align 8
  %"heap#struct#S#id0#.field#idx0#sym233" = getelementptr inbounds %"S#id0", ptr %"heap#struct#S#id0#2", i32 0, i32 0
  store i64 1, ptr %"heap#struct#S#id0#.field#idx0#sym233", align 4
  %"heap#array#" = call ptr @gc_malloc(i64 ptrtoint (ptr getelementptr ([2 x ptr], ptr null, i32 1) to i64), i64 ptrtoint (ptr getelementptr ({ i1, [2 x ptr] }, ptr null, i64 0, i32 1) to i64), ptr @"gc_callbacks#a2s1S")
  %"heap#array#4" = load [2 x ptr], ptr %"heap#array#", align 8
  %"heap#array#[0]#" = insertvalue [2 x ptr] %"heap#array#4", ptr %"heap#struct#S#id0#", 0
  %"heap#array#[1]#" = insertvalue [2 x ptr] %"heap#array#[0]#", ptr %"heap#struct#S#id0#2", 1
  store [2 x ptr] %"heap#array#[1]#", ptr %"heap#array#", align 8
  store ptr %"heap#array#", ptr %"a#local#sym24#", align 8
  call void @gc_run()
  ret void
}

attributes #0 = { nounwind }
