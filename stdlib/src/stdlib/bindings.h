/* This file was generated by ../../cbindgen.sh */

#include <stdarg.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
#include <stdlib.h>


typedef struct Map Map;

typedef const void *ListElement;

typedef struct List {
  const ListElement *ptr;
  size_t len;
  size_t cap;
} List;

typedef const void *MapValue;

typedef struct MapKeyVTable {
  void (*hash)(const void*, void*);
  bool (*equals)(const void*, const void*);
} MapKeyVTable;

typedef struct MapKey {
  const void *value;
  const struct MapKeyVTable *vtable;
} MapKey;

typedef struct Str {
  const uint8_t *ptr;
  size_t len;
  size_t cap;
} Str;

extern const struct MapKeyVTable STDLIB_STR_MAPKEY_VTABLE;

struct List *stdlib_list_new(void);

ListElement stdlib_list_pop(struct List *list);

void stdlib_list_push(struct List *list, ListElement element);

MapValue stdlib_map_get(struct Map *map, struct MapKey key);

MapValue stdlib_map_insert(struct Map *map, struct MapKey key, MapValue val);

size_t stdlib_map_len(struct Map *map);

struct Map *stdlib_map_new(void);

MapValue stdlib_map_remove(struct Map *map, struct MapKey key);

struct Str *tmc_stdlib_string_new(const uint8_t *ptr, size_t len);
